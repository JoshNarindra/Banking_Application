Index: src/AccountNumberGeneration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\nClass AccountNumberGenerator generates an 8 digit UK Format Account Number.\r\n\r\nThe\r\n\r\n */\r\n\r\n//Imports\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\n\r\npublic class AccountNumberGeneration\r\n{\r\n    //Method creates a string consisting of a concatenation of 8 random digits.\r\n    public String generateAccountNumber()\r\n    {\r\n        // First generate random 8-digit number\r\n        Random rand = new Random();\r\n        ArrayList<String> accountNumberArray = new ArrayList<String>();\r\n        String generatedAccountNumber = \"\";\r\n\r\n        for (int i=0; i<8; i++){\r\n            //Generate random digit.\r\n            int randomDigit = rand.nextInt(10);\r\n\r\n            //Add each digit to Arraylist\r\n            accountNumberArray.add(Integer.toString(randomDigit));\r\n        }\r\n\r\n        for (String digit: accountNumberArray) {\r\n            generatedAccountNumber = generatedAccountNumber+digit;\r\n        }\r\n\r\n        System.out.println(generatedAccountNumber);\r\n\r\n        // Then query the database for an account of that number\r\n        DatabaseConnection connection = new DatabaseConnection();\r\n\r\n        //String query = \"select COUNT(1) from Accounts where AccountNumber = '\" + generatedAccountNumber + \"';\";\r\n        String query = \"select COUNT(1) from Accounts where AccountNumber = '80000001';\";\r\n\r\n        try {\r\n            var stmt = connection.getConnection().prepareStatement(query);\r\n            var rs = stmt.executeQuery();\r\n\r\n            while (rs.next()) {\r\n                if (rs.getInt(1) == 1) {\r\n                    System.out.println(\"Account Number already exists in database\");\r\n                } else {\r\n                    System.out.println(\"Account Number does not exist in database.\");\r\n                }\r\n            }\r\n        }\r\n        catch (Exception e ){\r\n            e.printStackTrace();\r\n        }\r\n\r\n        // If no such account exists then it's cool\r\n        // If the account exists then generate another random 8-digit (could be done using while loop)\r\n\r\n\r\n        return \"placeholder\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/AccountNumberGeneration.java b/src/AccountNumberGeneration.java
--- a/src/AccountNumberGeneration.java	(revision 146f956e706736d692044e50475d8abcb4265039)
+++ b/src/AccountNumberGeneration.java	(date 1672944917014)
@@ -11,54 +11,32 @@
 
 public class AccountNumberGeneration
 {
-    //Method creates a string consisting of a concatenation of 8 random digits.
-    public String generateAccountNumber()
-    {
-        // First generate random 8-digit number
+
+    public String generateAccountNumber(){
+        return "placeholder";
+    }
+
+
+    //Method generate a string consisting of a concatenation of 8 random digits.
+    public String generateEightDigitString(){
         Random rand = new Random();
         ArrayList<String> accountNumberArray = new ArrayList<String>();
         String generatedAccountNumber = "";
 
+        //Generate random 8 digit array.
         for (int i=0; i<8; i++){
-            //Generate random digit.
-            int randomDigit = rand.nextInt(10);
-
-            //Add each digit to Arraylist
-            accountNumberArray.add(Integer.toString(randomDigit));
+            int randomDigit = rand.nextInt(10); //Generate random digit.
+            accountNumberArray.add(Integer.toString(randomDigit)); //Add each digit to Arraylist.
         }
 
+        //Generate 8 digit String.
         for (String digit: accountNumberArray) {
             generatedAccountNumber = generatedAccountNumber+digit;
         }
 
-        System.out.println(generatedAccountNumber);
-
-        // Then query the database for an account of that number
-        DatabaseConnection connection = new DatabaseConnection();
-
-        //String query = "select COUNT(1) from Accounts where AccountNumber = '" + generatedAccountNumber + "';";
-        String query = "select COUNT(1) from Accounts where AccountNumber = '80000001';";
-
-        try {
-            var stmt = connection.getConnection().prepareStatement(query);
-            var rs = stmt.executeQuery();
-
-            while (rs.next()) {
-                if (rs.getInt(1) == 1) {
-                    System.out.println("Account Number already exists in database");
-                } else {
-                    System.out.println("Account Number does not exist in database.");
-                }
-            }
-        }
-        catch (Exception e ){
-            e.printStackTrace();
-        }
+        return generatedAccountNumber;
+    }
 
-        // If no such account exists then it's cool
-        // If the account exists then generate another random 8-digit (could be done using while loop)
 
 
-        return "placeholder";
-    }
 }
Index: src/Program.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\nMain Program Class.\r\n */\r\n\r\n//imports\r\nimport javax.xml.crypto.Data;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\n\r\npublic class Program\r\n{\r\n\r\n    public static void main(String[] args) throws SQLException\r\n    {\r\n        //accountExists();\r\n\r\n        AccountNumberGeneration x = new AccountNumberGeneration();\r\n        x.generateAccountNumber();\r\n    }\r\n\r\n    public static void accountExists() throws SQLException\r\n    {\r\n\r\n        //Initial Menu.\r\n        System.out.println(\"Welcome to ACME Banking Solutions...\");\r\n        System.out.println(\"\\n Does the customer currently have an account with us? \\n 1. Yes. \\n 2. No. \\n 9. Exit.\");\r\n\r\n        //Scanner to read bank tellers input for user choice.\r\n        Scanner s1 = new Scanner(System.in);\r\n        int menu = s1.nextInt();\r\n\r\n        //Re-prompting the teller for input until either 1 or 2 is inputted.\r\n        while (menu != 1 && menu != 2 && menu != 9){\r\n            System.out.println(\"Invalid input. Try again.\");\r\n            menu = s1.nextInt();\r\n        }\r\n\r\n        //Switch-Case statement for initial menu.\r\n        switch (menu) {\r\n            case 1 -> customerInfo();\r\n            case 2 -> openNewAccount();\r\n            case 9 -> exitProgram();\r\n        }\r\n    }\r\n\r\n    public static void customerInfo() throws SQLException\r\n    {\r\n\r\n        //Input account number with same means as above.\r\n        System.out.println(\"\\n Enter account number:\");\r\n        Scanner s2 = new Scanner(System.in);\r\n        String accountNumber = s2.nextLine();\r\n\r\n        //Re-prompting the teller for input until an account number of correct length is inputted.\r\n        while (accountNumber.length() != 8)\r\n        {\r\n            System.out.println(\"\\n Invalid input. Try again.\");\r\n            accountNumber = s2.nextLine();\r\n        }\r\n        System.out.println(accountNumber);\r\n\r\n        //Retrieve account details.\r\n        System.out.println(\"\\n Retrieving account details...\");\r\n        Account.retrieveCustomerInfo(accountNumber);\r\n\r\n        //Display customer info - NEEDS FIXING TO DISPLAY INDIVIDUAL RESULTS.\r\n        System.out.println(\"\\n Name: \");\r\n        System.out.println(\"\\n D.O.B: \");\r\n\r\n        //Display customers accounts with bank - NEEDS FIXING.\r\n        System.out.println(\"\\n Customer Accounts: \");\r\n\r\n        //Option to allow current customer to open new account. - NEEDS REMOVING\r\n        PersonalAccount x = new PersonalAccount(\"12312434\",\"090109\", 45.45f, 0.00f, true,true);\r\n        x.accountMenu();\r\n    }\r\n\r\n    public static void openNewAccount()\r\n    {\r\n        //Menu to create an account for new customer.\r\n        System.out.println(\"Open an account with ACME Banking\");\r\n        System.out.println(\" 1. Open a personal account. \\n 2. Open a business account. \\n 3. Open an ISA Account. \\n 9. Exit.\");\r\n\r\n        //Scanner to read bank tellers input for user menu choice.\r\n        Scanner s1 = new Scanner(System.in);\r\n        int menu = s1.nextInt();\r\n\r\n        //Re-prompting the teller for input until either 1, 2 or 3 is inputted.\r\n        while (menu != 1 && menu != 2 && menu != 3 && menu != 9)\r\n        {\r\n            System.out.println(\"Invalid input. Try again.\");\r\n            menu = s1.nextInt();\r\n        }\r\n\r\n        //Switch-Case statement for initial menu. - IMPLEMENT FUNCTIONALITY\r\n        switch (menu) {\r\n            case 1 -> System.out.println(\"Placeholder for personal account creation\");\r\n            case 2 -> System.out.println(\"Placeholder for business account creation\");\r\n            case 3 -> System.out.println(\"Placeholder for ISA account creation\");\r\n            case 9 -> exitProgram();\r\n        }\r\n    }\r\n\r\n    public static void exitProgram()\r\n    {\r\n        System.out.println(\"Successfully logged out.\");\r\n        System.exit(0);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Program.java b/src/Program.java
--- a/src/Program.java	(revision 146f956e706736d692044e50475d8abcb4265039)
+++ b/src/Program.java	(date 1672947994482)
@@ -16,10 +16,7 @@
 
     public static void main(String[] args) throws SQLException
     {
-        //accountExists();
-
-        AccountNumberGeneration x = new AccountNumberGeneration();
-        x.generateAccountNumber();
+        accountExists();
     }
 
     public static void accountExists() throws SQLException
Index: src/Queries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//Separate class for all queries which need to be executed before an instance of an Account is created\r\n//For example cannot call functions inside of Account, BusinessAccount etc. until a query made is made to create an instance\r\n//Also separates the queries from the connection itself which looks more tidy I think\r\n\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Queries\r\n{\r\n    public ArrayList<String> accountsColumns = new ArrayList<>(List.of(\"AccountNumber\", \"SortCode\", \"UserID\", \"AccountType\", \"Balance\", \"Overdraft\"));\r\n    public ArrayList<String> usersColumns = new ArrayList<>(List.of(\"ID\", \"FirstName\", \"LastName\", \"DateOfBirth\"));\r\n    public ArrayList<String> businessesColumns = new ArrayList<>(List.of(\"ID\", \"Name\", \"AccountNumber\"));\r\n\r\n    //Method which runs update queries on the database\r\n    public static void updateQuery(String query) throws SQLException\r\n    {\r\n        try\r\n        {\r\n            DatabaseConnection connection = new DatabaseConnection();\r\n\r\n            var stmt = connection.getConnection().prepareStatement(query);\r\n            stmt.executeQuery();\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //Method which runs read queries on the database\r\n    //Returns results an ArrayList of strings which contain the results from the table\r\n    //If connection fails null is returned\r\n    public static ArrayList<String> readQuery(String query, ArrayList columnNames) throws SQLException\r\n    {\r\n        try\r\n        {\r\n            ArrayList<String> results = new ArrayList<>(columnNames.size());\r\n\r\n            DatabaseConnection connection = new DatabaseConnection();\r\n\r\n            var stmt = connection.getConnection().prepareStatement(query);\r\n            var rs = stmt.executeQuery();\r\n\r\n            while (rs.next())\r\n            {\r\n                for (int i = 0; i < columnNames.size(); i++)\r\n                {\r\n                    results.set(i, rs.getString(columnNames.get(i).toString()));\r\n                }\r\n            }\r\n\r\n            return results;\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            e.printStackTrace();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //Method takes the account number provided and creates a PersonalAccount object using information from the database\r\n    public PersonalAccount retrievePersonalAccount(String accountNumber) throws SQLException\r\n    {\r\n        ArrayList<String> accountInformation;\r\n        accountInformation = this.readQuery(\"SELECT * FROM Accounts where AccountNumber = \" + accountNumber + \");\", accountsColumns);\r\n        PersonalAccount personalAccount = new PersonalAccount(accountInformation.get(0), accountInformation.get(1), Float.parseFloat(accountInformation.get(2)), Float.parseFloat(accountInformation.get(3)), true, true);\r\n        return personalAccount;\r\n    }\r\n\r\n    //Method takes the account number provided and creates an ISAAccount object using information from the database\r\n    public ISAAccount retrieveISAAccount(String accountNumber) throws SQLException\r\n    {\r\n        ArrayList<String> accountInformation;\r\n        accountInformation = this.readQuery(\"SELECT * FROM Accounts where AccountNumber = \" + accountNumber + \");\", accountsColumns);\r\n        ISAAccount isaAccount = new ISAAccount(accountInformation.get(0), accountInformation.get(1), Float.parseFloat(accountInformation.get(2)), Float.parseFloat(accountInformation.get(3)));\r\n        return isaAccount;\r\n    }\r\n\r\n    //Method takes the account number provided and creates a BusinessAccount object using information from the database\r\n    public BusinessAccount retrieveBusinessAccount(String accountNumber) throws SQLException\r\n    {\r\n        ArrayList<String> accountInformation;\r\n        accountInformation = this.readQuery(\"SELECT * FROM Accounts where AccountNumber = \" + accountNumber + \");\", accountsColumns);\r\n        BusinessAccount businessAccount = new BusinessAccount(accountInformation.get(0), accountInformation.get(1), Float.parseFloat(accountInformation.get(2)), Float.parseFloat(accountInformation.get(3)), retrieveBusinessName(accountNumber));\r\n        return businessAccount;\r\n    }\r\n\r\n    public String retrieveBusinessName(String accountNumber) throws SQLException\r\n    {\r\n        ArrayList<String> businessInformation;\r\n        businessInformation = this.readQuery(\"SELECT * FROM Businesses where AccountNumber = \" + accountNumber + \");\", businessesColumns);\r\n        String businessName = businessInformation.get(1);\r\n        return businessName;\r\n    }\r\n\r\n    //Method takes the name and date of birth of a person, creates a user in the Users table, and returns the UserID of that user\r\n    //This UserID can then be used as an argument for the createAccount method\r\n    public int createUser(String firstName, String lastName, String dateOfBirth) throws SQLException\r\n    {\r\n        ArrayList<String> userInformation = null;\r\n        this.updateQuery(\"INSERT INTO Users (FirstName, LastName, DateOfBirth) VALUES (\" + firstName + \", \" + lastName + \", \" + dateOfBirth + \");\");\r\n        this.readQuery(\"SELECT * FROM Accounts WHERE FirstName = \" + firstName + \", LastName = \" + lastName + \", DateOfBirth = \" + dateOfBirth + \");\", accountsColumns);\r\n        int userID = Integer.parseInt(userInformation.get(0));\r\n        return userID;\r\n    }\r\n\r\n    //Method takes a created BusinessAccount and uses it to create a new business in the Businesses table\r\n    public void createBusiness(BusinessAccount account) throws SQLException\r\n    {\r\n        this.updateQuery(\"INSERT INTO Businesses (Name, AccountNumber) VALUES (\" + account.getName() + \", \" + account.getAccountNumber() + \");\");\r\n    }\r\n\r\n    //Method takes the relevant information and creates a personal account, before returning the account itself as an object\r\n    public PersonalAccount createPersonalAccount(String accountNumber, String sortCode, int userID, float balance, float overdraft) throws SQLException\r\n    {\r\n        this.updateQuery(\"INSERT INTO Accounts VALUES (\" + accountNumber + \", \" + sortCode + \", \" + userID + \", \" + \"Personal\" + \", \" + balance + \", \" + overdraft + \");\");\r\n        PersonalAccount personalAccount = retrievePersonalAccount(accountNumber);\r\n        return personalAccount;\r\n    }\r\n\r\n    //Method takes the relevant information and creates an ISA account, before returning the account itself as an object\r\n    public ISAAccount createISAAccount(String accountNumber, String sortCode, int userID, float balance, float overdraft) throws SQLException\r\n    {\r\n        this.updateQuery(\"INSERT INTO Accounts VALUES (\" + accountNumber + \", \" + sortCode + \", \" + userID + \", \" + \"ISA\" + \", \" + balance + \", \" + overdraft + \");\");\r\n        ISAAccount isaAccount = retrieveISAAccount(accountNumber);\r\n        return isaAccount;\r\n    }\r\n\r\n    //Method takes the relevant information and creates a business account, before returning the account itself as an object\r\n    public BusinessAccount createBusinessAccount(String accountNumber, String sortCode, int userID, float balance, float overdraft, String businessName) throws SQLException\r\n    {\r\n        this.updateQuery(\"INSERT INTO Accounts VALUES (\" + accountNumber + \", \" + sortCode + \", \" + userID + \", \" + \"Business\" + \", \" + balance + \", \" + overdraft + \");\");\r\n        BusinessAccount businessAccount = retrieveBusinessAccount(accountNumber);\r\n        return businessAccount;\r\n    }\r\n\r\n    //Method takes an accountNumber String, and deletes the relevant entry from the Accounts table\r\n    public void deleteAccount(String accountNumber) throws SQLException\r\n    {\r\n        this.updateQuery(\"DELETE FROM Accounts WHERE AccountNumber = \" + accountNumber + \";\");\r\n    }\r\n\r\n    //Method takes a userID integer and deletes the relevant entry from the Users table\r\n    public void deleteUser(int userID) throws SQLException\r\n    {\r\n        this.updateQuery(\"DELETE FROM Users WHERE UserID = \" + userID + \";\");\r\n    }\r\n\r\n    //Method takes a businessID integer and deletes the relevant entry from the Businesses table\r\n    public void deleteBusiness(int businessID) throws SQLException\r\n    {\r\n        this.updateQuery(\"DELETE FROM Businesses WHERE ID = \" + businessID + \";\");\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Queries.java b/src/Queries.java
--- a/src/Queries.java	(revision 146f956e706736d692044e50475d8abcb4265039)
+++ b/src/Queries.java	(date 1672944917032)
@@ -60,6 +60,32 @@
         return null;
     }
 
+    // Method queries database to check if an account number exists in database. Returns true if account exists and false otherwise. -CHECK IF CAN USE PREEXISTING METHOD.
+    public Boolean checkAccountExists(String AccountNumber) {
+        DatabaseConnection connection = new DatabaseConnection();
+        Boolean accountExists=null;
+        String query = "select COUNT(1) from Accounts where AccountNumber = '" + AccountNumber + "';";
+
+        try {
+            var stmt = connection.getConnection().prepareStatement(query);
+            var rs = stmt.executeQuery();
+
+            while (rs.next()) {
+                if (rs.getInt(1) == 1) {
+                    //System.out.println("Account Number already exists in database");
+                    accountExists = true;
+
+                } else {
+                    //System.out.println("Account Number does not exist in database.");
+                    accountExists = false;
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return accountExists;
+    }
+
     //Method takes the account number provided and creates a PersonalAccount object using information from the database
     public PersonalAccount retrievePersonalAccount(String accountNumber) throws SQLException
     {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff4c1b09-c4a5-42c9-9134-c7e38c5d977e\" name=\"Changes\" comment=\"Database Connection Class update.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Account.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Account.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/AccountNumberGeneration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/AccountNumberGeneration.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/DatabaseConnection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/DatabaseConnection.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/PersonalAccount.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/PersonalAccount.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Program.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Program.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Queries.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Queries.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"e56f4684-27dc-4235-a5c5-dd35980a8d2e\" />\r\n        <option name=\"url\" value=\"https://github.com/JoshNarindra/Banking_Application.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2JSL54fu2ktI1BDk3LOo7HV2SQx\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/joshu/IdeaProjects/JavaFXLogin&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff4c1b09-c4a5-42c9-9134-c7e38c5d977e\" name=\"Changes\" comment=\"\" />\r\n      <created>1672066355779</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1672066355779</updated>\r\n      <workItem from=\"1672066358101\" duration=\"5246000\" />\r\n      <workItem from=\"1672103908147\" duration=\"60000\" />\r\n      <workItem from=\"1672104969952\" duration=\"121000\" />\r\n      <workItem from=\"1672148124721\" duration=\"7995000\" />\r\n      <workItem from=\"1672228202568\" duration=\"2578000\" />\r\n      <workItem from=\"1672266508408\" duration=\"6787000\" />\r\n      <workItem from=\"1672583152802\" duration=\"8536000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Initial Class Layout.\">\r\n      <created>1672148787123</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672148787123</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Basic Menu Framework\">\r\n      <created>1672186553273</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672186553273</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Added Menu Framework\">\r\n      <created>1672188041041</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672188041041</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"workspace update\">\r\n      <created>1672188070384</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672188070384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Minor update.\">\r\n      <created>1672188825949</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672188825949</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Minor update.\">\r\n      <created>1672189009523</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672189009523</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added abstract methods for account creation.\">\r\n      <created>1672229169763</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672229169763</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added abstract methods for account creation.\">\r\n      <created>1672229245986</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672229245986</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added comments. fixed minor bugs\">\r\n      <created>1672230776747</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672230776747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Minor layout changes\">\r\n      <created>1672267689678</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672267689678</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"File name change\">\r\n      <created>1672268217286</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672268217286</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\".\">\r\n      <created>1672268239343</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672268239343</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added Menu System to Personal Acc.\">\r\n      <created>1672326525155</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672326525155</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Updated Menu System to Personal Acc.\">\r\n      <created>1672327260299</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672327260299</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Updated Menu System to Personal Acc.\">\r\n      <created>1672327397920</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672327397920</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"accountMenu() method added to children of account class.\">\r\n      <created>1672327998633</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672327998633</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Added DatabaseConnection Class.\">\r\n      <created>1672420460300</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672420460300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Added DatabaseConnection Class.\">\r\n      <created>1672420487889</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672420487889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Updated accounts menus.\">\r\n      <created>1672605561203</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672605561204</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Updated accounts menus.\">\r\n      <created>1672606443775</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672606443775</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Updated accounts menus.\">\r\n      <created>1672606774637</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672606774637</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Added name and DOB variables.\">\r\n      <created>1672606831283</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672606831283</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Added constructor for user class.\">\r\n      <created>1672606965811</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672606965811</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Added constructor for user class.\">\r\n      <created>1672674813823</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672674813823</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Database Connection update.\">\r\n      <created>1672680270871</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672680270871</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Database Connection update.\">\r\n      <created>1672680291715</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672680291715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"getConnection can now run queries\">\r\n      <created>1672684223142</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672684223142</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Database Connection Class update.\">\r\n      <created>1672685227562</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672685227562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Database Connection Class update.\">\r\n      <created>1672685934261</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672685934261</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Database Connection Class update.\">\r\n      <created>1672687214597</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672687214597</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"31\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Initial Class Layout.\" />\r\n    <MESSAGE value=\"Basic Menu Framework\" />\r\n    <MESSAGE value=\"Added Menu Framework\" />\r\n    <MESSAGE value=\"workspace update\" />\r\n    <MESSAGE value=\"Minor update.\" />\r\n    <MESSAGE value=\"Added abstract methods for account creation.\" />\r\n    <MESSAGE value=\"Added comments. fixed minor bugs\" />\r\n    <MESSAGE value=\"Minor layout changes\" />\r\n    <MESSAGE value=\"File name change\" />\r\n    <MESSAGE value=\".\" />\r\n    <MESSAGE value=\"Added Menu System to Personal Acc.\" />\r\n    <MESSAGE value=\"Updated Menu System to Personal Acc.\" />\r\n    <MESSAGE value=\"accountMenu() method added to children of account class.\" />\r\n    <MESSAGE value=\"Added DatabaseConnection Class.\" />\r\n    <MESSAGE value=\"Updated accounts menus.\" />\r\n    <MESSAGE value=\"Added name and DOB variables.\" />\r\n    <MESSAGE value=\"Added constructor for user class.\" />\r\n    <MESSAGE value=\"Fixed connection bug.\" />\r\n    <MESSAGE value=\"Database Connection update.\" />\r\n    <MESSAGE value=\"getConnection can now run queries\" />\r\n    <MESSAGE value=\"Database Connection Class update.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Database Connection Class update.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 146f956e706736d692044e50475d8abcb4265039)
+++ b/.idea/workspace.xml	(date 1672944917999)
@@ -4,12 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ff4c1b09-c4a5-42c9-9134-c7e38c5d977e" name="Changes" comment="Database Connection Class update.">
+    <list default="true" id="ff4c1b09-c4a5-42c9-9134-c7e38c5d977e" name="Changes" comment="Added comments to highlight bugs, added funcionality to AccountNumberGeneration">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Account.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Account.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/AccountNumberGeneration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/AccountNumberGeneration.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DatabaseConnection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/DatabaseConnection.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/PersonalAccount.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PersonalAccount.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Program.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Program.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Queries.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Queries.java" afterDir="false" />
     </list>
@@ -297,7 +294,14 @@
       <option name="project" value="LOCAL" />
       <updated>1672687214597</updated>
     </task>
-    <option name="localTasksCounter" value="31" />
+    <task id="LOCAL-00031" summary="Added comments to highlight bugs, added funcionality to AccountNumberGeneration">
+      <created>1672942793363</created>
+      <option name="number" value="00031" />
+      <option name="presentableId" value="LOCAL-00031" />
+      <option name="project" value="LOCAL" />
+      <updated>1672942793363</updated>
+    </task>
+    <option name="localTasksCounter" value="32" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -325,6 +329,7 @@
     <MESSAGE value="Database Connection update." />
     <MESSAGE value="getConnection can now run queries" />
     <MESSAGE value="Database Connection Class update." />
-    <option name="LAST_COMMIT_MESSAGE" value="Database Connection Class update." />
+    <MESSAGE value="Added comments to highlight bugs, added funcionality to AccountNumberGeneration" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added comments to highlight bugs, added funcionality to AccountNumberGeneration" />
   </component>
 </project>
\ No newline at end of file
